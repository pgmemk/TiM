#!/usr/bin/env node

const fs = require('fs')
const path = require('path')

const fixBluebirdQ = () => {
  const source = 'require("bluebird/js/main/promise")()'
  const target = 'require("bluebird")'
  const filePath = path.resolve(__dirname, '../node_modules/bluebird-q/index.js')
  const current = fs.readFileSync(filePath, 'utf8')
  const idx = current.indexOf(source)
  if (idx !== -1) {
    fs.writeFileSync(filePath, current.replace(source, target))
  }
}

const fixBranch = () => {
  const source = `const packageFile = require('./../package.json')
export const VERSION = packageFile.version`
  const target = `export const VERSION = require('./../package.json').version`
  const filePath = path.resolve(__dirname, '../node_modules/react-native-branch/src/index.js')
  const current = fs.readFileSync(filePath, 'utf8')
  const idx = current.indexOf(source)
  if (idx !== -1) {
    fs.writeFileSync(filePath, current.replace(source, target))
  }
}

fixBluebirdQ()
fixBranch()
