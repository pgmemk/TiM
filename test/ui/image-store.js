import React, { Component } from 'react'
import {
  Alert,
  AppRegistry,
  StyleSheet,
  View,
  Text,
  Image,
  ImageStore,
  TouchableHighlight,
} from 'react-native'

const DATA_URL = ''

class App extends Component {
  state = {}
  async componentDidMount() {
    let uri
    try {
      uri = await new Promise((resolve, reject) => {
        ImageStore.addImageFromBase64(DATA_URL, resolve, reject)
      })
    } catch (err) {
      Alert.alert('failed to add image', err.message)
      return
    }

    const stored = await new Promise((resolve, reject) => {
      ImageStore.getBase64ForTag(uri, resolve, reject)
    })

    if (stored !== DATA_URL) {
      throw new Error('stored and fetched uri do not match')
    }

    this.setState({ uri })
  }
  render() {
    const { uri } = this.state
    const image = uri
      ? <Image style={styles.image} source={{uri}} />
      : null

    return (
      <View style={styles.container}>
        {image}
      </View>
    )
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  image: {
    flex:1,
    minWidth: 100,
    minHeight: 100,
  },
})

AppRegistry.registerComponent('Tradle', () => App)
